#!/usr/bin/env bash
#
# bootstrap installs things.

set -e

DOTFILES_ROOT="`pwd`"

if [ -z "$1" ]; then
  DEST_ROOT=$HOME
else
  DEST_ROOT="$1"
fi

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_files () {
  ln -s $1 $2
  success "linked $1 to $2"
}

install_xcode_cmdline_tools () {
  info "Installing Xcode command line tools"
  xcode-select --install
}

install_homebrew () {
  info "Installing Homebrew"
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
}

install_homebrew_cask () {
  info "Installing Homebrew Cask"
  brew tap phinze/cask
  brew install brew-cask
  export HOMEBREW_CASK_OPTS="--appdir=/Applications"
}

install_packages () {
  for pkg in ctags direnv hub mobile-shell rbenv reattach-to-user-namespace\
    ruby-build the_silver_searcher tmux vim zsh-completions
  do
    info "Installing $pkg"
    echo brew install "$pkg"
  done
}

install_mac_apps () {
  for app in alfred dropbox firefox phinze-cask/f-lux google-chrome hipchat\
    iterm2 rescuetime skype vagrant
  do
    info "Installing $app"
    echo brew cask install "$app"
  done
}

install_dotfiles () {
  info "Installing dotfiles from $DOTFILES_ROOT to $DEST_ROOT"

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOTFILES_ROOT -maxdepth 2 -name \*.symlink`
  do
    dest="$DEST_ROOT/.`basename \"${source%.*}\"`"

    if [ -f $dest ] || [ -d $dest ]
    then

      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        user "File already exists: `basename $source`, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        success "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        success "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files $source $dest
      else
        success "skipped $source"
      fi

    else
      link_files $source $dest
    fi

  done
}

if [ -z "$1" ]; then
  install_dotfiles
else
  info "Waiting 2 seconds to do a full bootstrap (incl. apps & packages). CTRL-C to cancel."
  sleep 2
  install_homebrew
  install_homebrew_cask
  install_packages
  install_mac_apps
  install_dotfiles
fi

